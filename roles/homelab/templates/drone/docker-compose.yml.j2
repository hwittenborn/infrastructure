version: '3.5'
services:
  # Drone server.
  drone_app:
    container_name: drone_app
    image: proget.{{ hw_url }}/docker/hwittenborn/drone:2.12.1
    restart: unless-stopped
    volumes:
      - ./data/app:/data
    environment:
      # Server config
      DRONE_GITHUB_CLIENT_ID: {{ drone_github_client_id }}
      DRONE_GITHUB_CLIENT_SECRET: {{ drone_github_client_secret }}
      DRONE_RPC_SECRET: {{ drone_rpc_secret }}
      DRONE_SERVER_HOST: 'drone.hunterwittenborn.com'
      DRONE_SERVER_PROTO: 'http'
      DRONE_SERVER_PROXY_PROTO: 'https'

      # User config
      DRONE_REGISTRATION_CLOSED: 'true'
      DRONE_USER_CREATE: 'username:hwittenborn,admin:true'

      # Debug stuff
      DRONE_LOGS_TEXT: 'true'
      DRONE_LOGS_PRETTY: 'true'
      DRONE_LOGS_COLOR: 'true'
      DRONE_LOGS_DEBUG: 'true'

      # Other stuff
      DRONE_STATUS_NAME: 'Drone CI'
      DRONE_JSONNET_ENABLED: 'true'
      DRONE_STARLARK_ENABLED: 'true'

      # Validation extension
      DRONE_VALIDATE_PLUGIN_ENDPOINT: "http://drone_global_triggers:8080"
      DRONE_VALIDATE_PLUGIN_SECRET: {{ drone_validate_plugin_secret }}
    labels:
      - "traefik.http.routers.drone_app.rule=Host(`drone.{{ hw_url }}`)"
      - "traefik.enable=true"
  
  # Drone Docker runner.
  drone_docker:
    container_name: drone_docker
    image: drone/drone-runner-docker:1
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DRONE_RPC_HOST: 'drone_app'
      DRONE_RPC_PROTO: 'http'
      DRONE_RPC_SECRET: {{ drone_rpc_secret }}
      DRONE_LIMIT_REPOS: 'hwittenborn/*,makedeb/*'
      DRONE_LIMIT_EVENTS: 'cron,push,custom'
      DRONE_RUNNER_CAPACITY: '5'

      # Extension: Global environment config
      DRONE_ENV_PLUGIN_ENDPOINT: 'http://drone_global_env:8080'
      DRONE_ENV_PLUGIN_TOKEN: {{ drone_env_plugin_token }}

  drone_global_triggers:
    container_name: drone_global_triggers
    image: proget.hunterwittenborn.com/docker/hwittenborn/drone-global-triggers
    restart: unless-stopped
    environment:
      DRONE_VALIDATE_PLUGIN_SECRET: {{ drone_validate_plugin_secret }}
      ALLOWLIST: 'push,cron,custom'

  drone_global_env:
    container_name: drone_global_env
    image: proget.hunterwittenborn.com/docker/hwittenborn/drone-global-env
    restart: unless-stopped
    volumes:
      - ./data/drone_global_env/config.yaml:/data/config.yaml
    environment:
      DRONE_ENV_PLUGIN_TOKEN: {{ drone_env_plugin_token }}
    labels:
      - "traefik.http.routers.drone_global_env.rule=Host(`drone-global-env.{{ hw_url }}`)"
      - "traefik.http.services.drone_global_env.loadbalancer.server.port=8080"
      - "traefik.enable=true"

# vim: set syntax=yaml sw=2 expandtab:
